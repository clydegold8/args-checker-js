var args=function(){"use strict";function t(t,r,s){var t=t||!1,r=r||!1,s=s||!1,i={errors:{},passed:!0};if(t===!1)throw new n("Function.arguments is required. \n\nFor more info, go to "+o+"#Function.arguments");if(t.constructor!==Object)throw new n("Function arguments must be an instance of a function's arguments.\n\nFor more info, go to "+o+"#Function.arguments");if(r===!1||r.length<1)throw new n("Expectations are required.\n\nFor more info, go to "+o+"#expectations");if(r.constructor!==Array)throw new n("Expectations must be an array of string expectations, "+typeof r+" was passed.\n\nFor more info, go to "+o+"#expectations");for(var a=0;a<=r.length-1;a++){if("string"!=typeof r[a])throw new n("Expectations must only contain valid string expectations, "+typeof r[a]+" was detected - `"+r[a]+"`. \n\nFor more info, go to "+o+"#expectations");for(var u=r[a].split("|"),f=0;f<=u.length-1;f++)if(!e(u[f]))throw new n("A malformed string of expectation was detected - `"+u[f]+"`. \n\nFor more info, go to "+o+"#expectations")}if(t.length<1)throw new n("There we're no arguments passed. Function expects arguments to be: ("+r.toString().split(",").join(", ")+"). \n\nFor more info, go to "+o+"#Function.arguments");if(t.length!==r.length)throw new n("The number of function arguments does not match the number of expected arguments. \n\nFor more info, go to "+o+"#Function.arguments");for(var a=0;a<=t.length-1;a++){var u=r[a].split("|");if(-1===u.indexOf("*")&&-1===u.indexOf(typeof t[a])){var c="Argument number "+(a+1)+" must be "+r[a]+", "+typeof t[a]+" was passed.";if(i.passed=!1,i.errors["argument "+(a+=1)]={passedData:t[a],passedDataType:typeof t[a],expects:u,message:c},s===!1)throw new n(c+"\n\nFor more info, go to "+o+"#Function.arguments")}}if(s!==!1){if("function"!=typeof s)throw new n("Callback function must be a function, "+typeof s+" was passed. \n\nFor more info, go to "+o+"#callback-function");s(i)}return i.passed}function e(t){return-1!==["object","function","string","number","boolean","*"].indexOf(t)}function n(t){this.name="ArgumentException",this.message=t,this.toString=function(){return this.name+": "+this.message}}var o="http://www.github.com/karlpatrickespiritu/args-checker-js";return{expect:t,ArgumentException:n}}();"undefined"==typeof exports&&(exports={}),exports=exports||{},exports.args=args;